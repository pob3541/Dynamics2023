% Created by Tian Wang on Feb.23rd, 2023. 
% Use validation set firing rates generated by LFADs to predict RT



% load data
%close all; clear; clc;
function lfadsFR_RT_regression(folder)
%folder = dir('~/Desktop/multiSessionLFADS/*.mat');



regression = struct;
for ii = 1:length(folder)
    
    lfadsR = load([folder(ii).folder '/' folder(ii).name]);

    rates = lfadsR.rates;
    validInds = lfadsR.validInds;
    validRates = rates(:,:,validInds);
    validRT = lfadsR.RT(validInds);
    validChoice = lfadsR.choice(validInds);
    validId = lfadsR.conditionIds(validInds);

    [r2, r2_coh] = predictRTFxn(validRates, validRT, validChoice, validId);
    
    regression(ii).subject = lfadsR.subject;
    regression(ii).r2 = r2;
    regression(ii).r2_coh = r2_coh;

end


%%% plot with 99 percentile line
% figure; hold on
% 
before = 600;
after = 1200;
t = linspace(-before, after, length(r2));

r2Matrix = [];
for id = 1:length(regression)
    r2Matrix(id,:) = regression(id).r2;
    r2CohAll(id) = regression(id).r2_coh;
    plot(t, regression(id).r2, 'linewidth', 5, 'color', [236 112  22]./255);
    yline(regression(id).r2_coh, '--')

end

yLower = 0;
yUpper = 1;
% 
% ylimit = [yLower, yUpper];
% xpatch = [-before -before 0 0];
% ypatch = [yLower yUpper yUpper yLower];
% p1 = patch(xpatch, ypatch, 'cyan');
% p1.FaceAlpha = 0.2;
% p1.EdgeAlpha = 0;
% 
% 
% plot([0,0], ylimit, 'color', [0.5 0.5 0.5], 'linestyle', '--', 'linewidth',5)
% title('Regression on RT', 'fontsize', 30)
% 
% 
% % cosmetic code
% hLimits = [-before,after];
% hTickLocations = -before:200:after;
% hLabOffset = 0;
% hAxisOffset = yLower-0.01;
% hLabel = "Time (ms)"; 
% 
% vLimits = ylimit;
% vTickLocations = [yLower (yLower + yUpper)/2 yUpper];
% vLabOffset = 150;
% vAxisOffset = -before-20;
% vLabel = "R^2"; 
% 
% plotAxis = [1 1];
% 
% [hp,vp] = getAxesP(hLimits,...
%     hTickLocations,...
%     hLabOffset,...
%     hAxisOffset,...
%     hLabel,...
%     vLimits,...
%     vTickLocations,...
%     vLabOffset,...
%     vAxisOffset,...
%     vLabel, plotAxis);
% 
% set(gcf, 'Color', 'w');
% axis off; 
% axis square;
% axis tight;

%% error bar plot
options.color_area = [243 169 114]./255;    % Orange theme
options.color_line = [236 112  22]./255;
options.alpha      = 0.5;
options.line_width = 2;
options.error      = 'c99';
options.handle     = figure(1);
options.x_axis = linspace(-before, after, size(r2Matrix,2));

% plot errorbar and generate source excel data
[data_mean, upperBd, lowerBd] = plot_areaerrorbar(r2Matrix, options);

% plot coh explained R2 
yline(mean(r2CohAll), 'k--');

disp(['mean r2 all Coh: ' num2str(mean(r2CohAll))])

yLower = 0;
yUpper = 1;

ylimit = [yLower, yUpper];
xpatch = [-before -before 0 0];
ypatch = [yLower yUpper yUpper yLower];
p1 = patch(xpatch, ypatch, 'cyan');
p1.FaceAlpha = 0.2;
p1.EdgeAlpha = 0;


plot([0,0], ylimit, 'color', [0.5 0.5 0.5], 'linestyle', '--', 'linewidth',5)
title(['mean Coh: ' num2str(mean(r2CohAll))] , 'fontsize', 30)


% cosmetic code
hLimits = [-before,after];
hTickLocations = -before:200:after;
hLabOffset = 0.05;
hAxisOffset = yLower-0.01;
hLabel = "Time (ms)"; 

vLimits = ylimit;
vTickLocations = [yLower (yLower + yUpper)/2 yUpper];
vLabOffset = 150;
vAxisOffset = -before-20;
vLabel = "RT R^2 (%)"; 

plotAxis = [1 1];

[hp,vp] = getAxesP(hLimits,...
    hTickLocations,...
    hLabOffset,...
    hAxisOffset,...
    hLabel,...
    vLimits,...
    vTickLocations,...
    vLabOffset,...
    vAxisOffset,...
    vLabel, plotAxis);

set(gcf, 'Color', 'w');
axis off; 
axis square;
axis tight;
end

% print('-painters','-depsc',['~/Desktop/', 'lfadsRatesR2RT','.eps'], '-r300');



% errBarData = [data_mean', upperBd', lowerBd'];
% T = array2table(errBarData, 'VariableNames',{'data_mean','upperBd','lowerBd'});
% writetable(T, '~/Desktop/sourceData/LFADS_analysis/lfadsr2.xlsx')

% %% check max and min # of units a
% aa = struct;
% for ii = 1:length(folder)
% 
%     aa(ii).rates = load([folder(ii).folder '/' folder(ii).name]).rates;
%     aa(ii).subject = load([folder(ii).folder '/' folder(ii).name]).subject;
% end